<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>外部排序 on Example Site</title>
        <link>https://example.com/tags/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/</link>
        <description>Recent content in 外部排序 on Example Site</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Wed, 31 Jul 2024 10:00:00 +0800</lastBuildDate><atom:link href="https://example.com/tags/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>外部排序</title>
        <link>https://example.com/p/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Wed, 31 Jul 2024 10:00:00 +0800</pubDate>
        
        <guid>https://example.com/p/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/</guid>
        <description>&lt;h1 id=&#34;外部排序&#34;&gt;外部排序
&lt;/h1&gt;&lt;h2 id=&#34;概念与意义&#34;&gt;概念与意义
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当待排序的数据量太大，无法依次装入内存时，需要借助外部存储器（如硬盘）来完成的排序算法。这是大数据处理中的核心技术之一。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;核心思想&#34;&gt;核心思想
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;外部排序使用分治策略
&lt;ul&gt;
&lt;li&gt;分割阶段：将大文件分成若干个小的有序子文件&lt;/li&gt;
&lt;li&gt;合并阶段：将这些有序的归并段合并成一个完整的有序文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本算法流程&#34;&gt;基本算法流程
&lt;/h2&gt;&lt;h3 id=&#34;第一阶段生成初始归并带&#34;&gt;第一阶段：生成初始归并带
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;读取能装入内存的一块数据&lt;/li&gt;
&lt;li&gt;在内存中堆这块数据进行排序（使用快速排序等内部排序算法）&lt;/li&gt;
&lt;li&gt;将排序后恶数据写入临时文件作为一个归并段&lt;/li&gt;
&lt;li&gt;重复上述步骤直到处理完所有数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二阶段多路归并&#34;&gt;第二阶段：多路归并
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;同时打开多个归并段文件&lt;/li&gt;
&lt;li&gt;从每个文件中读取一部分数据到内存缓冲区&lt;/li&gt;
&lt;li&gt;使用多路归并算法合并这些数据&lt;/li&gt;
&lt;li&gt;将合并结果写入输出文件&lt;/li&gt;
&lt;li&gt;重复直到所有数据合并完成&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关键参数分析&#34;&gt;关键参数分析
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;N：总记录数&lt;/li&gt;
&lt;li&gt;M：内存能容纳的记录数&lt;/li&gt;
&lt;li&gt;B：磁盘块大小&lt;/li&gt;
&lt;li&gt;初始归并段数量：$\lceil N/M \rceil$&lt;/li&gt;
&lt;li&gt;归并路数：通常选择 $k = M/B - 1$（预留一个缓冲区给输出）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;性能分析&#34;&gt;性能分析
&lt;/h2&gt;&lt;h3 id=&#34;时间复杂度&#34;&gt;时间复杂度
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;总的I/O次数：$O(N \times log_k[K/m])$&lt;/li&gt;
&lt;li&gt;比较次数：$O(N \times log_k[N/M])$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;空间复杂度&#34;&gt;空间复杂度
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;内存使用：$O(M)$&lt;/li&gt;
&lt;li&gt;临时磁盘空间：$O(N)$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;优化策略&#34;&gt;优化策略
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;替换选择排序：生成初始归并段时可以产生长度大于内存容量的归并段&lt;/li&gt;
&lt;li&gt;多项归并：当归并段数量不是k的倍数时，使用多相归并可以减少归并趟数&lt;/li&gt;
&lt;li&gt;缓冲区优化：为每个输入和输出文件分配合适大小的缓冲区；使用双缓冲技术overlap I/O和CPU计算&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
